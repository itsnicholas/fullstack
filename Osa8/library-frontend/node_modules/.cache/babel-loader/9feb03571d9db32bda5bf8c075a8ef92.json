{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/components/Recommend.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { GET_USER, ALL_BOOKS } from './../queries';\n\nconst Recommend = props => {\n  const gotUser = useQuery(GET_USER);\n  const [genre, setGenre] = useState(null);\n  const [getBooks, result] = useLazyQuery(ALL_BOOKS);\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    if (gotUser.data) {\n      setGenre(gotUser.data.me.favoriteGenre);\n      getBooks({\n        variables: {\n          genre: genre\n        }\n      });\n    }\n  }, [gotUser]);\n  useEffect(() => {\n    if (result.data) {\n      setBooks(result.data.allBooks);\n    }\n  }, [result]);\n  console.log(books, 'books in useEffect');\n  console.log(genre, 'genre in useEffect');\n\n  if (result.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  if (!props.show) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Recommendations\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"books in your favorite genre \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, genre)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"published\")), books.map(b => React.createElement(\"tr\", {\n    key: b.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, b.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, b.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, b.published)))))));\n};\n\nexport default Recommend;","map":{"version":3,"sources":["/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/components/Recommend.js"],"names":["React","useState","useEffect","useQuery","useLazyQuery","GET_USER","ALL_BOOKS","Recommend","props","gotUser","genre","setGenre","getBooks","result","books","setBooks","data","me","favoriteGenre","variables","allBooks","console","log","loading","show","map","b","title","author","name","published"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,gBAAvC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,OAAO,GAAGN,QAAQ,CAACE,QAAD,CAAxB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,MAAX,IAAqBT,YAAY,CAACE,SAAD,CAAvC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAO,CAACO,IAAZ,EAAkB;AAChBL,MAAAA,QAAQ,CAACF,OAAO,CAACO,IAAR,CAAaC,EAAb,CAAgBC,aAAjB,CAAR;AACAN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,SAAS,EAAE;AAAET,UAAAA,KAAK,EAAEA;AAAT;AAAb,OAAD,CAAR;AACD;AACF,GALQ,EAKN,CAACD,OAAD,CALM,CAAT;AAOAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,MAAM,CAACG,IAAX,EAAiB;AACfD,MAAAA,QAAQ,CAACF,MAAM,CAACG,IAAP,CAAYI,QAAb,CAAR;AACD;AACF,GAJQ,EAIN,CAACP,MAAD,CAJM,CAAT;AAMAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmB,oBAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EAAmB,oBAAnB;;AAEA,MAAIG,MAAM,CAACU,OAAX,EAAqB;AACnB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAI,CAACf,KAAK,CAACgB,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,KAAJ,CAAlC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGI,KAAK,CAACW,GAAN,CAAUC,CAAC,IACV;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACC,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,MAAF,CAASC,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACI,SAAP,CAHF,CADD,CAVH,CADF,CADF,CAHF,CADF;AA4BD,CA1DD;;AA4DA,eAAevB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useQuery, useLazyQuery } from '@apollo/client'\r\nimport { GET_USER, ALL_BOOKS } from './../queries'\r\n\r\nconst Recommend = (props) => {\r\n  const gotUser = useQuery(GET_USER)\r\n  const [genre, setGenre] = useState(null)\r\n  const [getBooks, result] = useLazyQuery(ALL_BOOKS)\r\n  const [books, setBooks] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (gotUser.data) {\r\n      setGenre(gotUser.data.me.favoriteGenre)\r\n      getBooks({ variables: { genre: genre } })\r\n    }\r\n  }, [gotUser])\r\n\r\n  useEffect(() => {\r\n    if (result.data) {\r\n      setBooks(result.data.allBooks)\r\n    }\r\n  }, [result])\r\n\r\n  console.log(books, 'books in useEffect')\r\n  console.log(genre, 'genre in useEffect')\r\n\r\n  if (result.loading)  {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Recommendations</h2>\r\n      <div>books in your favorite genre <b>{genre}</b></div>\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th></th>\r\n              <th>\r\n                author\r\n              </th>\r\n              <th>\r\n                published\r\n              </th>\r\n            </tr>\r\n            {books.map(b =>\r\n              <tr key={b.title}>\r\n                <td>{b.title}</td>\r\n                <td>{b.author.name}</td>\r\n                <td>{b.published}</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recommend"]},"metadata":{},"sourceType":"module"}