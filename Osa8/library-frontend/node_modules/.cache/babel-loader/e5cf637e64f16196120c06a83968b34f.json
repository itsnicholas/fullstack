{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Nicholas/Programming/Fullstack/fullstack/osa8/library-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql, useQuery } from '@apollo/client';\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      bookCount\n    }\n  }\n`;\n\nconst App = () => {\n  const [page, setPage] = useState('authors');\n  const result = useQuery(ALL_AUTHORS);\n  const [authors, setAuthors] = useState([]);\n  useEffect(() => {\n    if (result.data) {\n      setAuthors(result.data.allAuthors);\n    }\n  }, [result]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"add book\")), React.createElement(Authors, {\n    authors: authors,\n    show: page === 'authors',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Books, {\n    show: page === 'books',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(NewBook, {\n    show: page === 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Nicholas/Programming/Fullstack/fullstack/osa8/library-frontend/src/App.js"],"names":["React","useState","useEffect","Authors","Books","NewBook","gql","useQuery","ALL_AUTHORS","App","page","setPage","result","authors","setAuthors","data","allAuthors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,MAAMC,WAAW,GAAGF,GAAI;;;;;;;;CAAxB;;AAUA,MAAMG,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAMW,MAAM,GAAGL,QAAQ,CAACC,WAAD,CAAvB;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,MAAM,CAACG,IAAX,EAAiB;AACfD,MAAAA,UAAU,CAACF,MAAM,CAACG,IAAP,CAAYC,UAAb,CAAV;AACD;AACF,GAJQ,EAIN,CAACJ,MAAD,CAJM,CAAT;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,EAOE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEE,OAAlB;AACE,IAAA,IAAI,EAAEH,IAAI,KAAK,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAWE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEA,IAAI,KAAK,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAeE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEA,IAAI,KAAK,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAsBD,CAjCD;;AAmCA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql, useQuery } from '@apollo/client'\n\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      bookCount\n    }\n  }\n`\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n  const result = useQuery(ALL_AUTHORS)\n  const [authors, setAuthors] = useState([])\n\n  useEffect(() => {\n    if (result.data) {\n      setAuthors(result.data.allAuthors)\n    }\n  }, [result])\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('add')}>add book</button>\n      </div>\n\n      <Authors authors={authors}\n        show={page === 'authors'}\n      />\n\n      <Books\n        show={page === 'books'}\n      />\n\n      <NewBook\n        show={page === 'add'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}