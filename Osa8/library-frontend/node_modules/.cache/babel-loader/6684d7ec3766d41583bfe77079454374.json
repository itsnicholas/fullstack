{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from 'apollo-link-context';\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('phonenumbers-user-token');\n  return {\n    headers: { ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  };\n});\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000'\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","ApolloProvider","HttpLink","InMemoryCache","setContext","authLink","_","headers","token","localStorage","getItem","authorization","httpLink","uri","client","cache","link","concat","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SACIC,YADJ,EACkBC,cADlB,EACkCC,QADlC,EAC4CC,aAD5C,QAES,gBAFT;AAIA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,MAAMC,QAAQ,GAAGD,UAAU,CAAC,CAACE,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,GAAP;AAMD,CAR0B,CAA3B;AAUA,MAAMI,QAAQ,GAAG,IAAIV,QAAJ,CAAa;AAAEW,EAAAA,GAAG,EAAE;AAAP,CAAb,CAAjB;AAEA,MAAMC,MAAM,GAAG,IAAId,YAAJ,CAAiB;AAC9Be,EAAAA,KAAK,EAAE,IAAIZ,aAAJ,EADuB;AAE9Ba,EAAAA,IAAI,EAAEX,QAAQ,CAACY,MAAT,CAAgBL,QAAhB;AAFwB,CAAjB,CAAf;AAKAd,QAAQ,CAACoB,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport { \n    ApolloClient, ApolloProvider, HttpLink, InMemoryCache\n  } from '@apollo/client'\n\nimport { setContext } from 'apollo-link-context' \n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('phonenumbers-user-token')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n  \nconst httpLink = new HttpLink({ uri: 'http://localhost:4000' })  \n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <App />\n  </ApolloProvider>, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}