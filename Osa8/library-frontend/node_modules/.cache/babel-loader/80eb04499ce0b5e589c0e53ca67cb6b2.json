{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql, useQuery } from '@apollo/client';\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      bookCount\n    }\n  }\n`;\nexport const ALL_BOOKS = gql`\n  query {\n    allBooks { \n      title \n      published\n      author {\n        name\n      }\n    }\n  }\n`;\n\nconst App = () => {\n  const [page, setPage] = useState('authors');\n  const allAuthors = useQuery(ALL_AUTHORS);\n  const allBooks = useQuery(ALL_BOOKS); //const [authors, setAuthors] = useState([])\n  //const [books, setBooks] = useState([])\n\n  console.log(allBooks.data, 'allBooks.data in App.js');\n  console.log(allAuthors.data, 'allAuthors.data in App.js');\n  console.log(allBooks.data.allBooks, 'allBooks.data.allBooks in App.js');\n  console.log(allAuthors.data.allAuthors, 'allAuthors.data.allAuthors in App.js'); //useEffect(() => {\n  //  if (allAuthors.data) {\n  //    console.log(allAuthors.data.allAuthors, 'allAuthors.data.allAuthors in App.js')\n  //    setAuthors(allAuthors.data.allAuthors)\n  //  }\n  //}, [allAuthors])\n  //useEffect(() => {\n  //  if (allBooks.data) {\n  //    console.log(allBooks.data.allAuthors, 'allBooks.data.allAuthors in App.js')\n  //    setBooks(allBooks.data.allBooks)\n  //  }\n  //}, [allBooks])\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"add book\")), React.createElement(Authors, {\n    authors: allAuthors.data.allAuthors,\n    show: page === 'authors',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Books, {\n    books: allBooks.data.allBooks,\n    show: page === 'books',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(NewBook, {\n    show: page === 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/App.js"],"names":["React","useState","useEffect","Authors","Books","NewBook","gql","useQuery","ALL_AUTHORS","ALL_BOOKS","App","page","setPage","allAuthors","allBooks","console","log","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,OAAO,MAAMC,WAAW,GAAGF,GAAI;;;;;;;;CAAxB;AAUP,OAAO,MAAMG,SAAS,GAAGH,GAAI;;;;;;;;;;CAAtB;;AAYP,MAAMI,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAMY,UAAU,GAAGN,QAAQ,CAACC,WAAD,CAA3B;AACA,QAAMM,QAAQ,GAAGP,QAAQ,CAACE,SAAD,CAAzB,CAHgB,CAIhB;AACA;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EAA2B,yBAA3B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACI,IAAvB,EAA6B,2BAA7B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcH,QAA1B,EAAoC,kCAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACI,IAAX,CAAgBJ,UAA5B,EAAwC,sCAAxC,EAVgB,CAYhB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,EAOE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEC,UAAU,CAACI,IAAX,CAAgBJ,UAAlC;AACE,IAAA,IAAI,EAAEF,IAAI,KAAK,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAWE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEG,QAAQ,CAACG,IAAT,CAAcH,QAA5B;AACE,IAAA,IAAI,EAAEH,IAAI,KAAK,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAeE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEA,IAAI,KAAK,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAsBD,CAhDD;;AAkDA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql, useQuery } from '@apollo/client'\n\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      bookCount\n    }\n  }\n`\n\nexport const ALL_BOOKS = gql`\n  query {\n    allBooks { \n      title \n      published\n      author {\n        name\n      }\n    }\n  }\n`\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n  const allAuthors = useQuery(ALL_AUTHORS)\n  const allBooks = useQuery(ALL_BOOKS)\n  //const [authors, setAuthors] = useState([])\n  //const [books, setBooks] = useState([])\n\n  console.log(allBooks.data, 'allBooks.data in App.js')\n  console.log(allAuthors.data, 'allAuthors.data in App.js')\n  console.log(allBooks.data.allBooks, 'allBooks.data.allBooks in App.js')\n  console.log(allAuthors.data.allAuthors, 'allAuthors.data.allAuthors in App.js')\n\n  //useEffect(() => {\n  //  if (allAuthors.data) {\n  //    console.log(allAuthors.data.allAuthors, 'allAuthors.data.allAuthors in App.js')\n  //    setAuthors(allAuthors.data.allAuthors)\n  //  }\n  //}, [allAuthors])\n\n  //useEffect(() => {\n  //  if (allBooks.data) {\n  //    console.log(allBooks.data.allAuthors, 'allBooks.data.allAuthors in App.js')\n  //    setBooks(allBooks.data.allBooks)\n  //  }\n  //}, [allBooks])\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('add')}>add book</button>\n      </div>\n\n      <Authors authors={allAuthors.data.allAuthors}\n        show={page === 'authors'}\n      />\n\n      <Books books={allBooks.data.allBooks}\n        show={page === 'books'}\n      />\n\n      <NewBook\n        show={page === 'add'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}