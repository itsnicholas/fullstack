{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/components/Books.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { ALL_BOOKS, ALL_GENRES } from './../queries';\n\nconst Books = props => {\n  const allBooks = useQuery(ALL_BOOKS);\n  const allGenres = useQuery(ALL_GENRES);\n  const [getBooks, result] = useLazyQuery(ALL_BOOKS);\n  const [books, setBooks] = useState(null);\n  const [genres, setGenres] = useState(null);\n  useEffect(() => {\n    if (allBooks.data) {\n      setBooks(allBooks.data.allBooks);\n    }\n  }, [allBooks]);\n  useEffect(() => {\n    if (allGenres.data) {\n      setGenres(allGenres.data.allGenres);\n    }\n  }, [allGenres]);\n\n  const clickGenre = genre => {\n    getBooks({\n      variables: {\n        genre: genre\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (result.data) {\n      setBooks(result.data.allBooks);\n      console.log(result.data.allBooks, 'result.data.allBooks in useEffect');\n    }\n  }, [result]);\n\n  if (result.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  if (!props.show || !genres) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"published\")), books.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, a.published))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, genres.map(a => React.createElement(\"button\", {\n    key: a,\n    onClick: () => clickGenre(a),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, a)), React.createElement(\"button\", {\n    onClick: () => clickGenre(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"all genres\")));\n};\n\nexport default Books;","map":{"version":3,"sources":["/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/components/Books.js"],"names":["React","useState","useEffect","useQuery","useLazyQuery","ALL_BOOKS","ALL_GENRES","Books","props","allBooks","allGenres","getBooks","result","books","setBooks","genres","setGenres","data","clickGenre","genre","variables","console","log","loading","show","map","a","title","author","name","published"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useQuery, useLazyQuery } from '@apollo/client'\nimport { ALL_BOOKS, ALL_GENRES } from './../queries'\n\nconst Books = (props) => {\n  const allBooks = useQuery(ALL_BOOKS)\n  const allGenres = useQuery(ALL_GENRES)\n  const [getBooks, result] = useLazyQuery(ALL_BOOKS)\n  const [books, setBooks] = useState(null)\n  const [genres, setGenres] = useState(null)\n\n  useEffect(() => {\n    if (allBooks.data) {\n      setBooks(allBooks.data.allBooks)\n    }\n  }, [allBooks])\n\n  useEffect(() => {\n    if (allGenres.data) {\n      setGenres(allGenres.data.allGenres)\n    }\n  }, [allGenres])\n\n  const clickGenre = (genre) => {\n    getBooks({ variables: { genre: genre } })\n  }\n\n  useEffect(() => {\n    if (result.data) {\n      setBooks(result.data.allBooks)\n      console.log(result.data.allBooks, 'result.data.allBooks in useEffect')\n    }\n  }, [result])\n\n  if (result.loading) {\n    return <div>loading...</div>\n  }\n\n  if (!props.show || !genres) {\n    return null\n  }\n\n  return (\n    <div>\n      <h2>books</h2>\n\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              author\n            </th>\n            <th>\n              published\n            </th>\n          </tr>\n          {books.map(a =>\n            <tr key={a.title}>\n              <td>{a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <div>\n        {genres.map(a =>\n          <button key={a} onClick={() => clickGenre(a)}>{a}</button>\n        )}\n        <button onClick={() => clickGenre('')}>all genres</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}