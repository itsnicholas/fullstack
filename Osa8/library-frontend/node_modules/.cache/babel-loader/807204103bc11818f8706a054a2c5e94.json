{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Nicholas/Programming/Fullstack/fullstack/osa8/library-frontend/src/components/Books.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ALL_BOOKS } from './../queries';\n\nconst Books = props => {\n  const allBooks = useQuery(ALL_BOOKS);\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    if (allBooks.data) {\n      console.log(allBooks.data.allAuthors, 'allBooks.data.allAuthors in App.js');\n      setBooks(allBooks.data.allBooks);\n    }\n  }, [allBooks]); //if (allBooks.loading)  {\n  //  return <div>loading...</div>\n  //}\n\n  if (!props.show) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"published\")), books.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, a.published))))));\n};\n\nexport default Books;","map":{"version":3,"sources":["/mnt/c/Nicholas/Programming/Fullstack/fullstack/osa8/library-frontend/src/components/Books.js"],"names":["React","useState","useEffect","useQuery","ALL_BOOKS","Books","props","allBooks","books","setBooks","data","console","log","allAuthors","show","map","a","title","author","name","published"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,QAAQ,GAAGJ,QAAQ,CAACC,SAAD,CAAzB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,QAAQ,CAACG,IAAb,EAAmB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAAT,CAAcG,UAA1B,EAAsC,oCAAtC;AACAJ,MAAAA,QAAQ,CAACF,QAAQ,CAACG,IAAT,CAAcH,QAAf,CAAR;AACD;AACF,GALQ,EAKN,CAACA,QAAD,CALM,CAAT,CAJuB,CAWvB;AACA;AACA;;AAEA,MAAI,CAACD,KAAK,CAACQ,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGN,KAAK,CAACO,GAAN,CAAUC,CAAC,IACV;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACC,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,MAAF,CAASC,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACI,SAAP,CAHF,CADD,CAVH,CADF,CAHF,CADF;AA0BD,CA7CD;;AA+CA,eAAef,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { ALL_BOOKS } from './../queries'\n\nconst Books = (props) => {\n  const allBooks = useQuery(ALL_BOOKS)\n  const [books, setBooks] = useState([])\n\n  useEffect(() => {\n    if (allBooks.data) {\n      console.log(allBooks.data.allAuthors, 'allBooks.data.allAuthors in App.js')\n      setBooks(allBooks.data.allBooks)\n    }\n  }, [allBooks])\n\n  //if (allBooks.loading)  {\n  //  return <div>loading...</div>\n  //}\n\n  if (!props.show) {\n    return null\n  }\n\n  return (\n    <div>\n      <h2>books</h2>\n\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              author\n            </th>\n            <th>\n              published\n            </th>\n          </tr>\n          {books.map(a =>\n            <tr key={a.title}>\n              <td>{a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}