{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/components/NewBook.js\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_BOOK, ALL_AUTHORS, ALL_GENRES } from './../queries';\n\nconst NewBook = props => {\n  const [title, setTitle] = useState('');\n  const [author, setAuhtor] = useState('');\n  const [published, setPublished] = useState('');\n  const [genre, setGenre] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [createBook] = useMutation(CREATE_BOOK, {\n    onError: error => {\n      props.setErrorMessage(error);\n    },\n    update: (store, response) => {\n      props.updateCacheWith(response.data.addPerson);\n    } //refetchQueries: [ \n    //  { query: ALL_AUTHORS }, \n    //  { query: ALL_GENRES }\n    //]\n\n  });\n\n  if (!props.show || !props.token) {\n    return null;\n  }\n\n  const submit = async event => {\n    event.preventDefault();\n    createBook({\n      variables: {\n        title,\n        published,\n        author,\n        genres\n      }\n    });\n    console.log('add book...');\n    setTitle('');\n    setPublished('');\n    setAuhtor('');\n    setGenres([]);\n    setGenre('');\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"title\", React.createElement(\"input\", {\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"author\", React.createElement(\"input\", {\n    value: author,\n    onChange: ({\n      target\n    }) => setAuhtor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"published\", React.createElement(\"input\", {\n    type: \"number\",\n    value: published,\n    onChange: ({\n      target\n    }) => setPublished(Number(target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: genre,\n    onChange: ({\n      target\n    }) => setGenre(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addGenre,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"add genre\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"genres: \", genres.join(' ')), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"create book\")));\n};\n\nexport default NewBook;","map":{"version":3,"sources":["/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/components/NewBook.js"],"names":["React","useState","useMutation","CREATE_BOOK","ALL_AUTHORS","ALL_GENRES","NewBook","props","title","setTitle","author","setAuhtor","published","setPublished","genre","setGenre","genres","setGenres","createBook","onError","error","setErrorMessage","update","store","response","updateCacheWith","data","addPerson","show","token","submit","event","preventDefault","variables","console","log","addGenre","concat","target","value","Number","join"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { CREATE_BOOK, ALL_AUTHORS, ALL_GENRES } from './../queries'\n\nconst NewBook = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuhtor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n\n  const [ createBook ] = useMutation(CREATE_BOOK, {\n      onError: (error) => {\n        props.setErrorMessage(error)\n      },\n      update: (store, response) => {\n        props.updateCacheWith(response.data.addPerson)\n      }\n    //refetchQueries: [ \n    //  { query: ALL_AUTHORS }, \n    //  { query: ALL_GENRES }\n    //]\n  })\n\n  if (!props.show || !props.token) {\n    return null\n  }\n\n  const submit = async (event) => {\n    event.preventDefault()\n    createBook({  variables: { title, published, author, genres } })\n\n    console.log('add book...')\n\n    setTitle('')\n    setPublished('')\n    setAuhtor('')\n    setGenres([])\n    setGenre('')\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuhtor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type='number'\n            value={published}\n            onChange={({ target }) => setPublished(Number(target.value))}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">add genre</button>\n        </div>\n        <div>\n          genres: {genres.join(' ')}\n        </div>\n        <button type='submit'>create book</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook"]},"metadata":{},"sourceType":"module"}