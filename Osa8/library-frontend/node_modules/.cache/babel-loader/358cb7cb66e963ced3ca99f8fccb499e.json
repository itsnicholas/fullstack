{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport LoginForm from './components/LoginForm';\nimport Recommend from './components/Recommend';\nimport { useQuery, useApolloClient, useSubscription } from '@apollo/client';\nimport { ALL_AUTHORS, ALL_BOOKS, BOOK_ADDED, ALL_GENRES } from './queries';\n\nconst Notify = ({\n  errorMessage\n}) => {\n  if (!errorMessage) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, errorMessage);\n};\n\nconst App = () => {\n  const [page, setPage] = useState('authors');\n  const allAuthors = useQuery(ALL_AUTHORS);\n  const [authors, setAuthors] = useState([]);\n  const [token, setToken] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const client = useApolloClient();\n\n  const updateCacheWith = addedBook => {\n    const includedIn = (set, object) => set.map(b => b.id).includes(object.id);\n\n    const dataInStore = client.readQuery({\n      query: ALL_BOOKS\n    });\n\n    if (!includedIn(dataInStore.allBooks, addedBook)) {\n      client.writeQuery({\n        query: ALL_BOOKS,\n        data: {\n          allBooks: dataInStore.allBooks.concat(addedBook)\n        }\n      });\n      const dataInStore2 = client.readQuery({\n        query: ALL_GENRES\n      }); //console.log(dataInStore2.allGenres, 'dataInStore2.allGenres in App.js')\n      //console.log(dataInStore2.allGenres.length, 'dataInStore2.allGenres.length in App.js')\n\n      for (let i = 0; i < addedBook.genres.length; i++) {\n        console.log(addedBook.genres[i], 'addedBook.genres[i] in App.js');\n\n        if (!includedIn(dataInStore2.allGenres, addedBook.genre[i])) {\n          client.writeQuery({\n            query: ALL_GENRES,\n            data: {\n              allGenres: dataInStore2.allGenres.concat(addedBook.genre[i])\n            }\n          });\n        }\n      }\n    }\n  };\n\n  useSubscription(BOOK_ADDED, {\n    onSubscriptionData: ({\n      subscriptionData\n    }) => {\n      const addedBook = subscriptionData.data.bookAdded;\n      console.log(subscriptionData.data, 'subscriptionData.data in NewBook.js');\n      window.alert(addedBook.title + ' added');\n      updateCacheWith(addedBook);\n    }\n  });\n  useEffect(() => {\n    const token = localStorage.getItem('phonenumbers-user-token');\n\n    if (token) {\n      setToken(token);\n    }\n  }, []);\n  useEffect(() => {\n    if (allAuthors.data) {\n      console.log(allAuthors.data.allAuthors, 'allAuthors.data.allAuthors in App.js');\n      setAuthors(allAuthors.data.allAuthors);\n    }\n  }, [allAuthors]);\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n    setPage('login');\n  };\n\n  const notify = message => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  if (!token) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => setPage('authors'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"authors\"), React.createElement(\"button\", {\n      onClick: () => setPage('books'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"books\"), React.createElement(\"button\", {\n      onClick: () => setPage('login'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"login\")), React.createElement(Notify, {\n      errorMessage: errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(LoginForm, {\n      setToken: setToken,\n      setPage: setPage,\n      setError: notify,\n      show: page === 'login',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Authors, {\n      token: token,\n      authors: authors,\n      show: page === 'authors',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Books, {\n      show: page === 'books',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"add book\"), React.createElement(\"button\", {\n    onClick: () => setPage('recommend'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"recommend\"), React.createElement(\"button\", {\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"logout\")), React.createElement(Notify, {\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Authors, {\n    token: token,\n    authors: authors,\n    show: page === 'authors',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(Books, {\n    show: page === 'books',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(NewBook, {\n    token: token,\n    show: page === 'add',\n    updateCacheWith: updateCacheWith,\n    setErrorMessage: setErrorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Recommend, {\n    token: token,\n    show: page === 'recommend',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Nicholas/Programming/Fullstack/fullstack/Osa8/library-frontend/src/App.js"],"names":["React","useState","useEffect","Authors","Books","NewBook","LoginForm","Recommend","useQuery","useApolloClient","useSubscription","ALL_AUTHORS","ALL_BOOKS","BOOK_ADDED","ALL_GENRES","Notify","errorMessage","color","App","page","setPage","allAuthors","authors","setAuthors","token","setToken","setErrorMessage","client","updateCacheWith","addedBook","includedIn","set","object","map","b","id","includes","dataInStore","readQuery","query","allBooks","writeQuery","data","concat","dataInStore2","i","genres","length","console","log","allGenres","genre","onSubscriptionData","subscriptionData","bookAdded","window","alert","title","localStorage","getItem","logout","clear","resetStore","notify","message","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,eAApC,QAA2D,gBAA3D;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,EAA6CC,UAA7C,QAA+D,WAA/D;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACnC,MAAK,CAACA,YAAN,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,SACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,YADH,CADF;AAKD,CAVD;;AAYA,MAAME,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAMoB,UAAU,GAAGb,QAAQ,CAACG,WAAD,CAA3B;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACe,YAAD,EAAeU,eAAf,IAAkCzB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM0B,MAAM,GAAGlB,eAAe,EAA9B;;AAEA,QAAMmB,eAAe,GAAIC,SAAD,IAAe;AACrC,UAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,MAAN,KACjBD,GAAG,CAACE,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACC,EAAf,EAAmBC,QAAnB,CAA4BJ,MAAM,CAACG,EAAnC,CADF;;AAGA,UAAME,WAAW,GAAGV,MAAM,CAACW,SAAP,CAAiB;AAAEC,MAAAA,KAAK,EAAE3B;AAAT,KAAjB,CAApB;;AACA,QAAI,CAACkB,UAAU,CAACO,WAAW,CAACG,QAAb,EAAuBX,SAAvB,CAAf,EAAkD;AAChDF,MAAAA,MAAM,CAACc,UAAP,CAAkB;AAChBF,QAAAA,KAAK,EAAE3B,SADS;AAEhB8B,QAAAA,IAAI,EAAE;AAAEF,UAAAA,QAAQ,EAAGH,WAAW,CAACG,QAAZ,CAAqBG,MAArB,CAA4Bd,SAA5B;AAAb;AAFU,OAAlB;AAIA,YAAMe,YAAY,GAAGjB,MAAM,CAACW,SAAP,CAAiB;AAAEC,QAAAA,KAAK,EAAEzB;AAAT,OAAjB,CAArB,CALgD,CAMhD;AACA;;AACA,WAAK,IAAI+B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,SAAS,CAACiB,MAAV,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAChDG,QAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAS,CAACiB,MAAV,CAAiBD,CAAjB,CAAZ,EAAiC,+BAAjC;;AACA,YAAI,CAACf,UAAU,CAACc,YAAY,CAACM,SAAd,EAAyBrB,SAAS,CAACsB,KAAV,CAAgBN,CAAhB,CAAzB,CAAf,EAA6D;AAC3DlB,UAAAA,MAAM,CAACc,UAAP,CAAkB;AAChBF,YAAAA,KAAK,EAAEzB,UADS;AAEhB4B,YAAAA,IAAI,EAAE;AAAEQ,cAAAA,SAAS,EAAGN,YAAY,CAACM,SAAb,CAAuBP,MAAvB,CAA8Bd,SAAS,CAACsB,KAAV,CAAgBN,CAAhB,CAA9B;AAAd;AAFU,WAAlB;AAID;AACF;AACF;AACF,GAvBD;;AAyBAnC,EAAAA,eAAe,CAACG,UAAD,EAAa;AAC1BuC,IAAAA,kBAAkB,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAA0B;AAC5C,YAAMxB,SAAS,GAAGwB,gBAAgB,CAACX,IAAjB,CAAsBY,SAAxC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,gBAAgB,CAACX,IAA7B,EAAmC,qCAAnC;AACAa,MAAAA,MAAM,CAACC,KAAP,CAAa3B,SAAS,CAAC4B,KAAV,GAAkB,QAA/B;AACA7B,MAAAA,eAAe,CAACC,SAAD,CAAf;AACD;AANyB,GAAb,CAAf;AASA3B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,KAAK,GAAGkC,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAd;;AACA,QAAKnC,KAAL,EAAa;AACXC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,UAAU,CAACqB,IAAf,EAAqB;AACnBM,MAAAA,OAAO,CAACC,GAAR,CAAY5B,UAAU,CAACqB,IAAX,CAAgBrB,UAA5B,EAAwC,sCAAxC;AACAE,MAAAA,UAAU,CAACF,UAAU,CAACqB,IAAX,CAAgBrB,UAAjB,CAAV;AACD;AACF,GALQ,EAKN,CAACA,UAAD,CALM,CAAT;;AAOA,QAAMuC,MAAM,GAAG,MAAM;AACnBnC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAiC,IAAAA,YAAY,CAACG,KAAb;AACAlC,IAAAA,MAAM,CAACmC,UAAP;AACA1C,IAAAA,OAAO,CAAC,OAAD,CAAP;AACD,GALD;;AAOA,QAAM2C,MAAM,GAAIC,OAAD,IAAa;AAC1BtC,IAAAA,eAAe,CAACsC,OAAD,CAAf;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfvC,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAOA,MAAI,CAACF,KAAL,EAAY;AACV,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,OAAO,EAAE,MAAMJ,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAQ,MAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,EAGA;AAAQ,MAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA,CADF,EAOE,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAEJ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EASE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAES,QADZ;AAEE,MAAA,OAAO,EAAEL,OAFX;AAGE,MAAA,QAAQ,EAAE2C,MAHZ;AAIE,MAAA,IAAI,EAAE5C,IAAI,KAAK,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAgBE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEK,KAAhB;AACE,MAAA,OAAO,EAAEF,OADX;AAEE,MAAA,IAAI,EAAEH,IAAI,KAAK,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAqBE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,IAAI,KAAK,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CADF;AA0BD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,WAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE;AAAQ,IAAA,OAAO,EAAEwC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,EASE,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAE5C,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAWE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEQ,KAAhB;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,IAAI,EAAEH,IAAI,KAAK,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAgBE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,IAAI,KAAK,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAkBE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEK,KADT;AAEE,IAAA,IAAI,EAAEL,IAAI,KAAK,KAFjB;AAGE,IAAA,eAAe,EAAES,eAHnB;AAIE,IAAA,eAAe,EAAEF,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAyBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,IAAI,EAAEL,IAAI,KAAK,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF;AAiCD,CApID;;AAsIA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport LoginForm from './components/LoginForm'\nimport Recommend from './components/Recommend'\nimport { useQuery, useApolloClient, useSubscription } from '@apollo/client'\nimport { ALL_AUTHORS, ALL_BOOKS, BOOK_ADDED, ALL_GENRES } from './queries'\n\nconst Notify = ({ errorMessage }) => {\n  if ( !errorMessage ) {\n    return null\n  }\n\n  return (\n    <div style={{color: 'red'}}>\n      {errorMessage}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n  const allAuthors = useQuery(ALL_AUTHORS)\n  const [authors, setAuthors] = useState([])\n  const [token, setToken] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const client = useApolloClient()\n\n  const updateCacheWith = (addedBook) => {\n    const includedIn = (set, object) =>\n      set.map(b => b.id).includes(object.id)\n\n    const dataInStore = client.readQuery({ query: ALL_BOOKS })\n    if (!includedIn(dataInStore.allBooks, addedBook)) {\n      client.writeQuery({\n        query: ALL_BOOKS,\n        data: { allBooks : dataInStore.allBooks.concat(addedBook) }\n      })\n      const dataInStore2 = client.readQuery({ query: ALL_GENRES })\n      //console.log(dataInStore2.allGenres, 'dataInStore2.allGenres in App.js')\n      //console.log(dataInStore2.allGenres.length, 'dataInStore2.allGenres.length in App.js')\n      for (let i = 0; i < addedBook.genres.length; i++) {\n        console.log(addedBook.genres[i], 'addedBook.genres[i] in App.js')\n        if (!includedIn(dataInStore2.allGenres, addedBook.genre[i])) {\n          client.writeQuery({\n            query: ALL_GENRES,\n            data: { allGenres : dataInStore2.allGenres.concat(addedBook.genre[i]) }\n          })\n        }\n      }\n    }\n  }\n\n  useSubscription(BOOK_ADDED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      const addedBook = subscriptionData.data.bookAdded\n      console.log(subscriptionData.data, 'subscriptionData.data in NewBook.js')\n      window.alert(addedBook.title + ' added')\n      updateCacheWith(addedBook)\n    }\n  })\n\n  useEffect(() => {\n    const token = localStorage.getItem('phonenumbers-user-token')\n    if ( token ) {\n      setToken(token)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (allAuthors.data) {\n      console.log(allAuthors.data.allAuthors, 'allAuthors.data.allAuthors in App.js')\n      setAuthors(allAuthors.data.allAuthors)\n    }\n  }, [allAuthors])\n\n  const logout = () => {\n    setToken(null)\n    localStorage.clear()\n    client.resetStore()\n    setPage('login')\n  }\n\n  const notify = (message) => {\n    setErrorMessage(message)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  if (!token) {\n    return (\n      <div>\n        <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('login')}>login</button>\n        </div>\n\n        <Notify errorMessage={errorMessage} />\n\n        <LoginForm\n          setToken={setToken}\n          setPage={setPage}\n          setError={notify}\n          show={page === 'login'}\n        />\n\n        <Authors token={token} \n          authors={authors}\n          show={page === 'authors'}\n        />\n\n        <Books show={page === 'books'} />\n        \n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('add')}>add book</button>\n        <button onClick={() => setPage('recommend')}>recommend</button>\n        <button onClick={logout}>logout</button>\n      </div>\n\n      <Notify errorMessage={errorMessage} />\n\n      <Authors token={token} \n        authors={authors}\n        show={page === 'authors'}\n      />\n\n      <Books show={page === 'books'} />\n\n      <NewBook\n        token={token}\n        show={page === 'add'}\n        updateCacheWith={updateCacheWith}\n        setErrorMessage={setErrorMessage}\n      />\n\n      <Recommend\n        token={token}\n        show={page === 'recommend'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}